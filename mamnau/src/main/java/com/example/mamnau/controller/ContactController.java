package com.example.mamnau.controller;

import com.example.mamnau.service.EmailService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@Controller
@RequiredArgsConstructor
public class ContactController {

    private final EmailService emailService;

    @GetMapping("/contact")
    public String contact(Model model) {
        model.addAttribute("brandName", "M·∫ßm N√¢u");
        model.addAttribute("tagline", "ph√¢n h·ªØu c∆° t·ª´ b√£ c√† ph√™");
        return "contact"; // templates/contact.html (file b·∫°n ƒë√£ c√≥)
    }

    @PostMapping("/contact")
    public String submitContact(@RequestParam("name") String name,
                                @RequestParam("email") String email,
                                @RequestParam("message") String message,
                                Model model) {
        boolean ok = emailService.sendContact(name, email, message);
        model.addAttribute("brandName", "M·∫ßm N√¢u");
        model.addAttribute("tagline", "ph√¢n h·ªØu c∆° t·ª´ b√£ c√† ph√™");
        if (ok) {
            model.addAttribute("success", "C·∫£m ∆°n b·∫°n! Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c li√™n h·ªá.");
        } else {
            model.addAttribute("error", "G·ª≠i mail th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i sau.");
        }
        return "contact";
    }

    // ======== API cho trang Product Detail (popup g·ª≠i JSON) ========
    // Frontend g·ªçi: fetch("/api/contact", { method:"POST", headers:{"Content-Type":"application/json"}, body: JSON.stringify({...}) })
    @PostMapping("/api/contact")
    @ResponseBody
    public ResponseEntity<?> productContact(@RequestBody Map<String, Object> body) {
        String name     = str(body.get("name"));
        String email    = str(body.get("email"));
        String phone    = str(body.get("phone"));
        String product  = str(body.get("product"));
        String message  = str(body.get("message"));
        String quantity = str(body.get("quantity")); // c√≥ th·ªÉ r·ªóng

        // Validate c∆° b·∫£n
        if (!StringUtils.hasText(name)) {
            return ResponseEntity.badRequest().body(Map.of("ok", false, "error", "Thi·∫øu h·ªç t√™n"));
        }
        if (!StringUtils.hasText(email) && !StringUtils.hasText(phone)) {
            return ResponseEntity.badRequest().body(Map.of("ok", false, "error", "C·∫ßn √≠t nh·∫•t email ho·∫∑c s·ªë ƒëi·ªán tho·∫°i"));
        }

        // G·ªôp n·ªôi dung cho email (d√πng template V2 c·ªßa b·∫°n)
        StringBuilder sb = new StringBuilder();
        if (StringUtils.hasText(product))  sb.append("ü™¥ S·∫£n ph·∫©m: ").append(esc(product)).append("\n");
        if (StringUtils.hasText(quantity)) sb.append("üì¶ S·ªë l∆∞·ª£ng ∆∞·ªõc mu·ªën: ").append(esc(quantity)).append("\n");
        if (StringUtils.hasText(phone))    sb.append("üìû ƒêi·ªán tho·∫°i/Zalo: ").append(esc(phone)).append("\n");
        if (StringUtils.hasText(message))  sb.append("\n‚Äî Ghi ch√∫ c·ªßa kh√°ch ‚Äî\n").append(message);

        boolean ok = emailService.sendContactV2(name, email, sb.toString());
        return ok
                ? ResponseEntity.ok(Map.of("ok", true))
                : ResponseEntity.status(500).body(Map.of("ok", false));
    }

    // ======== Helpers ========
    private String str(Object v){ return v == null ? "" : String.valueOf(v).trim(); }
    private String esc(String v){
        return v.replace("&","&amp;").replace("<","&lt;").replace(">","&gt;");
    }
}

